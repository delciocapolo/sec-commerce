services:
  mysql:
    image: mysql:8.0
    container_name: sec-commerce-db
    restart: always
    tty: true
    volumes:
      - volume-sec-commerce-db:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=${DATABASE_NAME}
      - MYSQL_ROOT_PASSWORD=${DATABASE_PASSWORD}
    networks:
      - sec-commerce-app
  
  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 8889:80
    environment:
      - PMA_HOST=sec-commerce-db
    depends_on:
      - mysql
    networks:
      - sec-commerce-app

  app:
    build:
      context: ./
      dockerfile: docker/php/Dockerfile
    container_name: sec-commerce-php
    restart: always
    hostname: app
    tty: true
    volumes:
      - ./:/var/www
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    env_file:
      - path: ./.env
        required: true
    depends_on:
      - mysql
    networks:
      - sec-commerce-app

  ngrok:
    image: ngrok/ngrok:latest
    container_name: sec-commerce-reverse-tunnel
    restart: always
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    ports:
      - 4040:4040
    command:
      - "http"
      - "http://app:${SERVER_PORT}"
    networks:
      - sec-commerce-app
    depends_on:
      - app

volumes:
  volume-sec-commerce-db:
    driver: local

networks:
  sec-commerce-app:
    driver: bridge